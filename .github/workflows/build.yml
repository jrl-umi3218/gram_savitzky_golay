name: CI of gram-savitzy-golay 

on:
  push:
    paths-ignore:
      # Changes to those files don't mandate running CI
      - ".github/workflows/package.yml"
      - "debian/**"
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  clang-format:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Install clang-format-10
      run: |
        sudo apt-get -qq update
        sudo apt-get -qq install clang-format-10
    - name: Run clang-format-check
      run: |
        ./.clang-format-check.sh
  build:
    needs: clang-format
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, macos-latest, windows-latest]
        build-type: [Debug, RelWithDebInfo]
        compiler: [gcc, clang]
        exclude:
          # Only default compiler on macos-latest and windows-latest
          - os: macos-latest
            compiler: clang
          - os: windows-latest
            compiler: clang

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Install dependencies
      uses: jrl-umi3218/github-actions/install-dependencies@master
      with:
        compiler: ${{ matrix.compiler }}
        build-type: ${{ matrix.build-type }}
        ubuntu: |
          apt: libeigen3-dev doxygen doxygen-latex libboost-all-dev libspacevecalg-dev
          apt-mirrors:
            mc-rtc:
              cloudsmith: mc-rtc/head
        macos: |
          brew-taps: mc-rtc/mc-rtc
          brew: eigen boost pkg-config doxygen spacevecalg
        windows: |
          github:
            - path: eigenteam/eigen-git-mirror
              ref: 3.3.7
          vcpkg:
            repo: microsoft/vcpkg
            owner: mc-rtc
            token: "${{ secrets.GH_TOKEN }}"
            registries:
            - repo: mc-rtc/vcpkg-registry
              packages: [ spacevecalg ]
    - name: Build and test
      uses: jrl-umi3218/github-actions/build-cmake-project@master
      with:
        compiler: ${{ matrix.compiler }}
        build-type: ${{ matrix.build-type }}
    - name: Upload documentation
      # Only run on master branch and for one configuration
      if: matrix.os == 'ubuntu-20.04' && matrix.build-type == 'RelWithDebInfo' && matrix.compiler == 'gcc' && github.ref == 'refs/heads/master'
      uses: jrl-umi3218/github-actions/upload-documentation@master
      with:
        GH_USER: arntanguy
        GH_PAGES_TOKEN: ${{ secrets.GH_PAGES_TOKEN }}
